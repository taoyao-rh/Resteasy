<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs-all</artifactId>
        <version>4.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <name>RESTEasy Main testsuite</name>
    <description/>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <artifactId>resteasy-testsuite</artifactId>

    <properties>
        <version.resteasy.testsuite>${project.version}</version.resteasy.testsuite>
        <additional.surefire.excluded.groups></additional.surefire.excluded.groups>
        <!-- default value required for cmd-line -->
        <securityManagerArg>-DSECMGR="false"</securityManagerArg>
        <!-- Optional property for jacoco report generation -->
        <sources.path></sources.path>
        <jacoco.agent></jacoco.agent>
        <additionalJvmArgs></additionalJvmArgs>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <failIfNoTests>false</failIfNoTests>
                    <systemPropertyVariables>
                        <securityManagerArg>${securityManagerArg}</securityManagerArg>
                        <additionalJvmArgs>${additionalJvmArgs} ${modular.jdk.props}</additionalJvmArgs>
                        <ipv6>false</ipv6>
                        <ipv6ArquillianSettings></ipv6ArquillianSettings>
                        <node>127.0.0.1</node>
                        <jboss.home>${jboss.home}</jboss.home>
                        <project.version>${project.version}</project.version>
                        <version.resteasy.testsuite>${version.resteasy.testsuite}</version.resteasy.testsuite>
                    </systemPropertyVariables>
                    <excludedGroups>org.jboss.resteasy.category.ExpectedFailing,${additional.surefire.excluded.groups}</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <property>
                    <name>!forward.compatibility</name>
                </property>
            </activation>
            <modules>
                <module>arquillian-utils</module>
                <module>unit-tests</module>
                <module>integration-tests</module>
                <module>integration-tests-spring</module>
                <module>microprofile-tck</module>
            </modules>
        </profile>
        <!-- Forward compatibility: use EAP 7.0.0.GA and newer Client from CP stream (e.g. client from RESTEasy delivered by EAP 7.0.2 -->
        <profile>
            <id>forward.compatibility</id>
            <activation>
                <property>
                    <name>forward.compatibility</name>
                </property>
            </activation>
            <modules>
                <module>arquillian-utils</module>
                <module>unit-tests</module>
                <!-- Uncomment module below when EAP/Widlfly with Resteasy 3.1 is released -->
                <module>integration-tests</module>
                <module>integration-tests-spring</module>
            </modules>
            <properties>
                <additional.surefire.excluded.groups>org.jboss.resteasy.category.NotForForwardCompatibility</additional.surefire.excluded.groups>
            </properties>
        </profile>
        <profile>
            <id>home</id>
            <activation>
                <property>
                  <name>!jboss.home</name>
                </property>
            </activation>
            <properties>
                <jboss.home>${server.home}</jboss.home>
            </properties>
        </profile>
        <profile>
            <id>server-version</id>
            <activation>
              <property>
                <name>!server.version</name>
              </property>
            </activation>
            <properties>
                <server.version>14.0.0.Final</server.version>
            </properties>
        </profile>
        <profile>
            <id>server-version-13x-exclusions</id>
            <activation>
              <property>
                <name>server.version</name>
                <value>13.0.0.Final</value>
              </property>
            </activation>
            <properties>
              <additional.surefire.excluded.groups>org.jboss.resteasy.category.ExpectedFailingOnWildFly13</additional.surefire.excluded.groups>
            </properties>
        </profile>
        <!-- If resteasy.version is specified, it will be used for tests instead of the project.version -->
        <profile>
            <id>custom-resteasy-version</id>
            <activation>
                <property>
                    <name>version.resteasy.testsuite</name>
                </property>
            </activation>
            <properties>
                <version.resteasy.testsuite>${version.resteasy.testsuite}</version.resteasy.testsuite>
            </properties>
        </profile>
        <profile>
            <id>ipv6</id>
            <activation>
                <property>
                    <name>ipv6</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                            <systemPropertyVariables>
                                <securityManagerArg>${securityManagerArg}</securityManagerArg>
                                <additionalJvmArgs>${additionalJvmArgs}</additionalJvmArgs>
                                <ipv6>true</ipv6>
                                <ipv6ArquillianSettings>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6ArquillianSettings>
                                <node>::1</node>
                                <project.version>${project.version}</project.version>
                                <version.resteasy.testsuite>${version.resteasy.testsuite}</version.resteasy.testsuite>
                            </systemPropertyVariables>
                            <excludedGroups>org.jboss.resteasy.category.ExpectedFailing</excludedGroups>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <!-- For testing purposes enable to run all tests including the failing ones -->
        <profile>
            <id>enable.expected.failing</id>
            <activation>
                <property>
                    <name>enable.expected.failing</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration combine.children="append">
                            <excludedGroups></excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- This profile starts server with security manager -->
        <profile>
            <id>security.manager</id>
            <activation>
                <property>
                    <name>security.manager</name>
                </property>
            </activation>
            <properties>
                <securityManagerArg>-secmgr</securityManagerArg>
            </properties>
        </profile>
        <!-- This profile creates custom server configuration file with configured Elytron subsystem -->
        <profile>
            <id>elytron</id>
            <activation>
                <property>
                    <name>elytron</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <target>
                                        <copy file="${server.home}/standalone/configuration/standalone-full.xml"
                                              tofile="${server.home}/standalone/configuration/standalone-full-elytron.xml"
                                              overwrite="true" failonerror="true"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>enable-elytron-full-cli</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/java</executable>
                                    <arguments>
                                        <argument>-jar</argument>
                                        <argument>${server.home}/jboss-modules.jar</argument>
                                        <argument>-mp</argument>
                                        <argument>${server.home}/modules</argument>
                                        <argument>org.jboss.as.cli</argument>
                                        <argument>--file=${basedir}/config/enable-elytron-full.cli</argument>
                                    </arguments>
                                    <environmentVariables>
                                        <JBOSS_HOME>${server.home}</JBOSS_HOME>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <securityManagerArg>${securityManagerArg}</securityManagerArg>
                                <additionalJvmArgs>${additionalJvmArgs}</additionalJvmArgs>
                                <jboss.server.config.file.name>standalone-full-elytron.xml</jboss.server.config.file.name>
                                <additionalJvmArgs>${modular.jdk.props}</additionalJvmArgs>
                                <ipv6>false</ipv6>
                                <ipv6ArquillianSettings></ipv6ArquillianSettings>
                                <node>127.0.0.1</node>
                                <jboss.home>${jboss.home}</jboss.home>
                                <project.version>${project.version}</project.version>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- This profile enforces to define -Delytron property when -Dsecurity.domain=elytron is triggered -->
        <profile>
            <id>security.domain</id>
            <activation>
                <property>
                    <name>security.domain</name>
                    <value>elytron</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>elytron</property>
                                            <message>You must set property '-Delytron' to the build in order to have all components for Elytron configured!</message>
                                        </requireProperty>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- This profile generates jacoco coverage files. To generate html report use "-Djacoco.generate.report" -->
        <profile>
            <id>jacoco</id>
            <activation>
                <property>
                    <name>jacoco</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.jacoco</groupId>
                    <artifactId>org.jacoco.core</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                     <plugin>
                         <groupId>org.jacoco</groupId>
                         <artifactId>jacoco-maven-plugin</artifactId>
                         <executions>
                             <execution>
                                 <id>jacoco-prepare</id>
                                 <phase>validate</phase>
                                 <goals>
                                     <goal>prepare-agent</goal>
                                 </goals>
                                 <configuration>
                                     <destFile>${project.build.directory}/jacoco.exec</destFile>
                                     <!-- Jacoco sets this property with agent configuration.
                                     This property is passed to maven-surefire-plugin -->
                                     <propertyName>surefireArgLine</propertyName>
                                 </configuration>
                             </execution>
                             <execution>
                                 <id>jacoco-prepare-it</id>
                                 <phase>validate</phase>
                                 <goals>
                                     <goal>prepare-agent-integration</goal>
                                 </goals>
                                 <configuration>
                                     <destFile>${project.build.directory}/jacoco.exec</destFile>
                                     <!-- Jacoco sets this property with agent configuration.
                                     This property is passed to maven-surefire-plugin as system property variable jacoco.agent.
                                     jacoco.agent property is passed to arquillian.xml -->
                                     <propertyName>jacoco.agent</propertyName>
                                 </configuration>
                             </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>${surefireArgLine}</argLine>
                            <skipTests>false</skipTests>
                            <systemPropertyVariables>
                                <jacoco.agent>@{jacoco.agent}</jacoco.agent>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- This profile generates html report from jacoco coverage files. Use "-Djacoco" property to generate coverage. -->
        <profile>
            <id>jacoco-generate-report</id>
            <activation>
                <property>
                    <name>jacoco.generate.report</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <!-- Copy jacoco ant jar. This is needed to generate jacoco report with maven-antrun-plugin -->
                            <execution>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jacoco</groupId>
                                            <artifactId>org.jacoco.ant</artifactId>
                                            <version>${version.org.jacoco.plugin}</version></artifactItem>
                                    </artifactItems>
                                    <stripVersion>true</stripVersion>
                                    <outputDirectory>${project.build.directory}/jacoco-jars</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>post-integration-test</phase>
                                <goals><goal>run</goal></goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <target>
                                        <property name="result.report.dir" location="target/jacoco-report"/>
                                        <taskdef name="report" classname="org.jacoco.ant.ReportTask">
                                            <classpath path="${project.build.directory}/jacoco-jars/org.jacoco.ant.jar"/>
                                        </taskdef>
                                        <echo>Creating JaCoCo RESTEasy test coverage reports...</echo>
                                        <report>
                                            <executiondata>
                                                <fileset dir="${basedir}">
                                                    <include name="**/target/jacoco.exec"/>
                                                </fileset>
                                            </executiondata>
                                            <structure name="JaCoCo RESTEasy">
                                                <classfiles>
                                                    <fileset dir="${server.home}/modules/">
                                                        <include name="**/resteasy*.jar"/>
                                                        <include name="**/jose-jwt*.jar"/>
                                                        <include name="**/async-http-servlet*.jar"/>
                                                        <include name="**/jboss-jaxrs-api*.jar"/>
                                                        <include name="**/jackson-jaxrs*.jar"/>
                                                        <include name="**/jackson-module*.jar"/>
                                                        <include name="**/wildfly-jaxrs*.jar"/>
                                                    </fileset>
                                                </classfiles>
                                                <sourcefiles encoding="UTF-8">
                                                    <fileset dir="${sources.path}">
                                                        <include name="**/*.java"/>
                                                    </fileset>
                                                </sourcefiles>
                                            </structure>
                                            <html destdir="\${result.report.dir}"/>
                                            <xml destfile="\${result.report.dir}/report.xml"/>
                                        </report>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.jacoco</groupId>
                                <artifactId>org.jacoco.ant</artifactId>
                                <version>${version.org.jacoco.plugin}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

